/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.CategoriaDAO;
import controller.CombustivelDAO;
import controller.ProdutoDAO;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Combustivel;
import model.Produto;

/**
 *
 * @author ycar2
 */
public class FormPesquisaCombustivel extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormPesquisaCombustivel
     */
    public FormPesquisaCombustivel() {
        initComponents();
        configurarForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabDadosProd = new javax.swing.JTable();

        lblNome.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblNome.setText("Pesquisa por nome");

        txtNome.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNomeKeyReleased(evt);
            }
        });

        tabDadosProd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabDadosProd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabDadosProdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabDadosProd);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNome)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtNome))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyReleased

        //if (evt.getKeyCode() == KeyEvent.VK_ENTER){
            //recuperar o nome utilizado na pesquisa
            String nome = txtNome.getText();

            if (nome.isEmpty()){
                //exibir todos os registros da tabela
                preencherTabela(new CombustivelDAO().listar());
            }else{
                //pesquisar pelo nome
                preencherTabela(
                    new CombustivelDAO().pesquisarPorNome(nome)
                );
            }
            //}
    }//GEN-LAST:event_txtNomeKeyReleased

    private void tabDadosProdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabDadosProdMouseClicked

        //verificar se o usuário clicou 2x
        if (evt.getClickCount() == 2){

            //recuperar o ID da categoria selecionada
            int linha = tabDadosProd.getSelectedRow();
            String id = tabDadosProd.getValueAt(linha, 0).toString();

            //abrir o formulário de Produto e centralizar na tela
            FormCadastrarCombustivel f = new  FormCadastrarCombustivel(id);
            Dimension d = this.getDesktopPane().getSize();
            this.getDesktopPane().add(f);
            f.setLocation( (d.width-f.getSize().width)/2, (d.height-f.getSize().height)/2);
            f.setVisible(true);

            //fechar o formulário de pesquisa
            this.dispose();
        }
    }//GEN-LAST:event_tabDadosProdMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTable tabDadosProd;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
     
    private void configurarForm() {
        this.setTitle("Pesquisa de Produto");
        this.setResizable(false);
        this.setClosable(true);
        configurarTabela();
        
        preencherTabela(new CombustivelDAO().listar());
        
    }
    private void configurarTabela() {
        DefaultTableModel m = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        m.addColumn("Id");
        m.addColumn("Nome");
        m.addColumn("Categoria");
        m.addColumn("Quantidade (L)");
        m.addColumn("Preço (R$)");
        m.addColumn("Taxa (%)");
        m.addColumn("Preço Final (%)");
        m.addColumn("Ativo");
        tabDadosProd.setModel(m);
    }

    private void preencherTabela(List<Combustivel> lista) {

        if (lista != null) {
            if (lista.size() > 0) {
                configurarTabela();
                DefaultTableModel m = (DefaultTableModel)tabDadosProd.getModel();
                for(Combustivel obj : lista){
                    m.addRow(new Object[]
                        {
                            obj.getId(),
                            obj.getNome(),
                             //exibir o nome da Categoria
                            new CategoriaDAO().pesquisarPorId(
                                Integer.toString(obj.getId_categoria())
                            ),
                            obj.getQntl(),
                            obj.getPreco(),
                            obj.getTaxa(),
                            (obj.getPreco()*obj.getTaxa())+obj.getPreco(),
                            obj.getFg_ativo() == 0 ? "Não" : "Sim"
                        }
                    );
                }
                tabDadosProd.setModel(m);
            } else {
                configurarTabela();
                JOptionPane.showMessageDialog(null, "A tabela não contém dados.", "Produto",
                        JOptionPane.INFORMATION_MESSAGE
                );
            }
        } else {
            JOptionPane.showMessageDialog(null,"Ocorreu um erro.","Produto",
                    JOptionPane.ERROR_MESSAGE
            );
        }
    }


}
